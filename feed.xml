<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0"  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title> Binary Codex</title>
    <link>https://binarycodex0.github.io</link>
    <description>A weirdo's blog</description>
    <language>en-us</language>

    <item>
      <title>Array</title>
      <link>https://binarycodex0.github.io/Arrays.html</link>
      <description> Notes for array </description>
	  <content:encoded><![CDATA[
<h1 id="array">Array</h1>
<p>Array is a container for same type objects. It is fixed size. Can’t
change the number of elements it contains. Elements are <em>stored next
to each other in memory</em>, which makes access very fast (O(1)
time).</p>
<p>Example:</p>
<p><code>int numbers[5]; // array of 5 integers int numbers[5] = {0, 1, 2, 3, 4} // create an arrat with elements.</code></p>
<p>Can access each items:</p>
<div class="sourceCode" id="cb1"><pre
class="sourceCode cpp"><code class="sourceCode cpp"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a>cout <span class="op">&lt;&lt;</span> numbers<span class="op">[</span><span class="dv">3</span><span class="op">];</span> <span class="co">// prints element at numbers (3).</span></span></code></pre></div>
<p>Can change items:</p>
<div class="sourceCode" id="cb2"><pre
class="sourceCode cpp"><code class="sourceCode cpp"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a>cout <span class="op">&lt;&lt;</span> numbers<span class="op">[</span><span class="dv">3</span><span class="op">]</span> <span class="op">=</span> <span class="dv">0</span><span class="op">;</span> <span class="co">// 4th element is now 0;</span></span></code></pre></div>
<h2 id="array-length">Array Length</h2>
<p>Since arrays contain same time of elements their length (how many
element it stores) by dividing total size of an array to single
element.</p>
<p>int arrLength = sizeof(numbers) / sizeof(numbers[0]); // prints
number of elements in numbers[].</p>
<h3 id="inserting-an-element-to-an-array">Inserting an element to an
array:</h3>
<p>It is not the best practice to inserting an element to array since
you have to shift elements but if there’s not unoccupied space in the
array it means you have to overwrite data which means losing data.</p>
<p>First let’s say we have enough space;</p>
<div class="sourceCode" id="cb3"><pre
class="sourceCode cpp"><code class="sourceCode cpp"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> numbers<span class="op">[</span><span class="dv">10</span><span class="op">]</span> <span class="op">=</span> <span class="op">{</span><span class="dv">0</span><span class="op">,</span> <span class="dv">1</span><span class="op">,</span> <span class="dv">2</span><span class="op">,</span> <span class="dv">3</span><span class="op">,</span> <span class="dv">4</span><span class="op">,};</span> </span>
<span id="cb3-2"><a href="#cb3-2" aria-hidden="true" tabindex="-1"></a><span class="co">// elements at numbers[5..10] are not assigned</span></span>
<span id="cb3-3"><a href="#cb3-3" aria-hidden="true" tabindex="-1"></a><span class="co">// but they are reserved for potential items.</span></span>
<span id="cb3-4"><a href="#cb3-4" aria-hidden="true" tabindex="-1"></a><span class="co">// You can imagine the array like that:</span></span>
<span id="cb3-5"><a href="#cb3-5" aria-hidden="true" tabindex="-1"></a><span class="co">// numbers[10] = {0, 1, 2, 3, 4, N/A, N/A, N/A, N/A, N/A};</span></span>
<span id="cb3-6"><a href="#cb3-6" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> arrLength <span class="op">=</span> <span class="kw">sizeof</span><span class="op">(</span>numbers<span class="op">)</span> <span class="op">/</span> <span class="kw">sizeof</span><span class="op">(</span>numbers<span class="op">[</span><span class="dv">0</span><span class="op">]);</span></span>
<span id="cb3-7"><a href="#cb3-7" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> pos <span class="op">=</span> <span class="dv">3</span><span class="op">;</span> <span class="co">// place where we want to insert item (numbers[3]).</span></span>
<span id="cb3-8"><a href="#cb3-8" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> num <span class="op">=</span> <span class="dv">10</span><span class="op">;</span></span>
<span id="cb3-9"><a href="#cb3-9" aria-hidden="true" tabindex="-1"></a><span class="co">// shift all the items to get a free at the position we want.</span></span>
<span id="cb3-10"><a href="#cb3-10" aria-hidden="true" tabindex="-1"></a><span class="cf">for</span> <span class="op">(</span><span class="dt">int</span> i <span class="op">=</span> arrLength<span class="op">;</span> i <span class="op">&gt;</span> pos<span class="op">;</span> i<span class="op">--)</span> <span class="op">{</span></span>
<span id="cb3-11"><a href="#cb3-11" aria-hidden="true" tabindex="-1"></a> numbers<span class="op">[</span>i<span class="op">]</span> <span class="op">=</span> numbers<span class="op">[</span>i <span class="op">+</span> <span class="dv">1</span><span class="op">]</span></span>
<span id="cb3-12"><a href="#cb3-12" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span>
<span id="cb3-13"><a href="#cb3-13" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-14"><a href="#cb3-14" aria-hidden="true" tabindex="-1"></a><span class="co">// now numbers[] looks like this:</span></span>
<span id="cb3-15"><a href="#cb3-15" aria-hidden="true" tabindex="-1"></a><span class="co">// numbers[10] = {0, 1, 2, N/A, 3, 4, N/A, N/A, N/A, N/A, N/A}</span></span>
<span id="cb3-16"><a href="#cb3-16" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-17"><a href="#cb3-17" aria-hidden="true" tabindex="-1"></a><span class="co">// insert the element at the position we want</span></span>
<span id="cb3-18"><a href="#cb3-18" aria-hidden="true" tabindex="-1"></a>numbers<span class="op">[</span><span class="dv">3</span><span class="op">]</span> <span class="op">=</span> <span class="dv">10</span><span class="op">;</span></span>
<span id="cb3-19"><a href="#cb3-19" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-20"><a href="#cb3-20" aria-hidden="true" tabindex="-1"></a><span class="co">// now numbers[] looks like this:</span></span>
<span id="cb3-21"><a href="#cb3-21" aria-hidden="true" tabindex="-1"></a><span class="co">// numbers[10] = {0, 1, 2, 10, 3, 4, N/A, N/A, N/A, N/A, N/A}</span></span></code></pre></div>
<p>What if there is no space for insertion? Then we have to overwrite
some data.</p>
<ol type="1">
<li>We can directly assign value such as:</li>
</ol>
<div class="sourceCode" id="cb4"><pre
class="sourceCode cpp"><code class="sourceCode cpp"><span id="cb4-1"><a href="#cb4-1" aria-hidden="true" tabindex="-1"></a>numbers<span class="op">[</span><span class="dv">3</span><span class="op">]</span> <span class="op">=</span> <span class="dv">100</span><span class="op">;</span></span></code></pre></div>
<ol start="2" type="1">
<li>But what if we want to protect the data at numbers[3]. Then we have
two options. We either shift to left or right.</li>
</ol>
<p>2.1 Left Shift (overwrite data at [0]):</p>
<div class="sourceCode" id="cb5"><pre
class="sourceCode cpp"><code class="sourceCode cpp"><span id="cb5-1"><a href="#cb5-1" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> numbers <span class="op">[</span><span class="dv">5</span><span class="op">]</span> <span class="op">=</span> <span class="op">{</span><span class="dv">0</span><span class="op">,</span> <span class="dv">1</span><span class="op">,</span> <span class="dv">2</span><span class="op">,</span> <span class="dv">3</span><span class="op">,</span> <span class="dv">4</span><span class="op">};</span></span>
<span id="cb5-2"><a href="#cb5-2" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> numbersLength <span class="op">=</span> <span class="kw">sizeof</span><span class="op">(</span>numbers<span class="op">)</span> <span class="op">/</span> <span class="kw">sizeof</span><span class="op">(</span>numbers<span class="op">[</span><span class="dv">0</span><span class="op">]);</span></span>
<span id="cb5-3"><a href="#cb5-3" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> pos <span class="op">=</span> <span class="dv">3</span><span class="op">;</span> <span class="co">// position where we want to insert element.</span></span>
<span id="cb5-4"><a href="#cb5-4" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> num <span class="op">=</span> <span class="dv">100</span><span class="op">;</span></span>
<span id="cb5-5"><a href="#cb5-5" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb5-6"><a href="#cb5-6" aria-hidden="true" tabindex="-1"></a><span class="co">// shift elements to left</span></span>
<span id="cb5-7"><a href="#cb5-7" aria-hidden="true" tabindex="-1"></a><span class="cf">for</span> <span class="op">(</span><span class="dt">int</span> i <span class="op">=</span> <span class="dv">0</span><span class="op">;</span> i <span class="op">&lt;</span> pos<span class="op">;</span> i<span class="op">++)</span> <span class="op">{</span></span>
<span id="cb5-8"><a href="#cb5-8" aria-hidden="true" tabindex="-1"></a> numbers<span class="op">[</span>i<span class="op">]</span> <span class="op">=</span> numbers<span class="op">[</span>i <span class="op">+</span> <span class="dv">1</span><span class="op">];</span></span>
<span id="cb5-9"><a href="#cb5-9" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span>
<span id="cb5-10"><a href="#cb5-10" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb5-11"><a href="#cb5-11" aria-hidden="true" tabindex="-1"></a><span class="co">// now our numbers[] looks like this: numbers[5] = { 1, 2, 3, 3, 4}</span></span>
<span id="cb5-12"><a href="#cb5-12" aria-hidden="true" tabindex="-1"></a><span class="co">// now we can assign our num to numbers[3].</span></span>
<span id="cb5-13"><a href="#cb5-13" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb5-14"><a href="#cb5-14" aria-hidden="true" tabindex="-1"></a>numbers<span class="op">[</span><span class="dv">3</span><span class="op">]</span> <span class="op">=</span> num<span class="op">;</span></span>
<span id="cb5-15"><a href="#cb5-15" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb5-16"><a href="#cb5-16" aria-hidden="true" tabindex="-1"></a><span class="co">// now our numbers[] looks like this: numbers[5] = { 1, 2, 100, 3, 4}</span></span></code></pre></div>
<p>2.2 similarly we can do it for the right shift.</p>
<div class="sourceCode" id="cb6"><pre
class="sourceCode cpp"><code class="sourceCode cpp"><span id="cb6-1"><a href="#cb6-1" aria-hidden="true" tabindex="-1"></a><span class="co">// right shift</span></span>
<span id="cb6-2"><a href="#cb6-2" aria-hidden="true" tabindex="-1"></a><span class="cf">for</span> <span class="op">(</span><span class="dt">int</span> i <span class="op">=</span> numbersLength<span class="op">;</span> i <span class="op">&gt;</span> pos<span class="op">;</span> i<span class="op">--)</span> <span class="op">{</span></span>
<span id="cb6-3"><a href="#cb6-3" aria-hidden="true" tabindex="-1"></a>    numbers<span class="op">[</span>i<span class="op">]</span> <span class="op">=</span> numbers<span class="op">[</span>i <span class="op">-</span> <span class="dv">1</span><span class="op">];</span></span>
<span id="cb6-4"><a href="#cb6-4" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span>
<span id="cb6-5"><a href="#cb6-5" aria-hidden="true" tabindex="-1"></a><span class="co">// now our numbers[] looks like this: numbers[5] = { 0, 1, 2, 3, 3}</span></span>
<span id="cb6-6"><a href="#cb6-6" aria-hidden="true" tabindex="-1"></a><span class="co">// now we can assign our num to numbers[3].</span></span>
<span id="cb6-7"><a href="#cb6-7" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb6-8"><a href="#cb6-8" aria-hidden="true" tabindex="-1"></a>numbers<span class="op">[</span><span class="dv">3</span><span class="op">]</span> <span class="op">=</span> num<span class="op">;</span></span>
<span id="cb6-9"><a href="#cb6-9" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb6-10"><a href="#cb6-10" aria-hidden="true" tabindex="-1"></a><span class="co">// now our numbers[] looks like this: numbers[5] = { 0, 1, 2, 100, 3}</span></span></code></pre></div>

  ]]>
</content:encoded>	  
      <pubDate>Wed, 27 Aug 2025 12:00:00 +0300</pubDate>
      <guid  isPermaLink="true">https://binarycodex0.github.io/Arrays.html</guid>
    </item>

  </channel>
</rss>
